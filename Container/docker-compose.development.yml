version: '3'
services:
  #######################################
  # NGINX frontend application Docker container
  #######################################
  frontend:
    build:
      context: ../
      dockerfile: ./Container/docker/nginx/nginx.Dockerfile
    container_name: sample-react-app
    ports:
      - "8001:80"
      - "8444:443"
      - "10122:22"
    privileged: true
    env_file:
          - etc/environment.yml
          - etc/environment.development.yml
  #######################################
  # PHP application Docker container
  #######################################
  backend:
    build:
      context: ../
      dockerfile: ./Container/development.Dockerfile
    container_name: sample-php-app
    ports:
      - "8000:80"
      - "8443:443"
      - "10022:22"
    volumes:
      - ../backend/:/app/
      - ./:/docker/
    # cap and privileged needed for slowlog
    cap_add:
      - SYS_PTRACE
    privileged: true
    env_file:
      - etc/environment.yml
      - etc/environment.development.yml
    environment:
      - VIRTUAL_HOST=.app.boilerplate.docker
      - VIRTUAL_PORT=80
      #- POSTFIX_RELAYHOST=[mail]:1025

  #######################################
  # PostgreSQL server
  #######################################
  postgres:
    build:
      context: ../
      dockerfile: ./Container/docker/postgres/Postgres-latest.Dockerfile
  #    dockerfile: Postgres-9.4.development.Dockerfile
  #    dockerfile: Postgres-9.5.development.Dockerfile
    ports:
      - 15432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file:
      - etc/environment.yml
      - etc/environment.development.yml

  #######################################
  # Solr server
  #######################################
  #solr:
  #  build:
  #    context: docker/solr/
  #  volumes:
  #    - solr:/opt/solr/server/solr/data
  #  env_file:
  #    - etc/environment.yml
  #    - etc/environment.development.yml
  #  environment:
  #    - SOLR_STORAGE=/opt/solr/server/solr/data
  #    - VIRTUAL_HOST=solr.boilerplate.docker
  #    - VIRTUAL_PORT=8983

  #######################################
  # Tika server
  #######################################
  #tika:
  #  build:
  #    context: docker/tika/
  #  ports:
  #    - 19998:9998

  #######################################
  # Elasticsearch
  #######################################
  #elasticsearch:
  #  build:
  #    context: docker/elasticsearch/
  #  ports:
  #    - 19200:9200
  #    - 19300:9300
  #  volumes:
  #    - elasticsearch:/usr/share/elasticsearch/data
  #  env_file:
  #    - etc/environment.yml
  #    - etc/environment.development.yml
  #  environment:
  #    - VIRTUAL_HOST=elasticsearch.boilerplate.docker
  #    - VIRTUAL_PORT=9200

  #######################################
  # Redis
  #######################################
  redis:
    build:
      context: docker/redis/
      dockerfile: redis.Dockerfile
    volumes:
      - redis:/data
    env_file:
      - etc/environment.yml
      - etc/environment.development.yml

  #######################################
  # Memcached
  #######################################
  #memcached:
  #  build:
  #    context: docker/memcached/
  #  env_file:
  #    - etc/environment.yml
  #    - etc/environment.development.yml

  #######################################
  # Mail
  #######################################
  # Mailhog
  #mail:
  #   image: mailhog/mailhog
   #  ports:
   #    - 8025:8025
   #  environment:
   #   - VIRTUAL_HOST=mail.boilerplate.docker
   #   - VIRTUAL_PORT=8025

  # Mailcatcher
  #mail:
  #  image: schickling/mailcatcher
  #  environment:
  #    - VIRTUAL_HOST=mail.boilerplate.docker
  #    - VIRTUAL_PORT=1080


  # Mailsandbox
  #mail:
  #  image: webdevops/mail-sandbox
  #  environment:
  #    - VIRTUAL_HOST=mail.boilerplate.docker
  #    - VIRTUAL_PORT=80

  #######################################
  # FTP (vsftpd)
  #######################################
  #ftp:
  #  build:
  #    context: docker/vsftpd/
  #  volumes:
  #    - ./:/application/
  #  env_file:
  #    - etc/environment.yml
  #    - etc/environment.development.yml

  #######################################
  # phpMyAdmin
  #######################################
  #phpmyadmin:
  #  image: phpmyadmin/phpmyadmin
  #  links:
  #    - mysql
  #  environment:
  #    - PMA_HOSTS=mysql
  #    - VIRTUAL_HOST=pma.boilerplate.docker
  #    - VIRTUAL_PORT=80
  #  volumes:
  #    - phpmyadmin:/sessions

volumes:
  #mysql:
  postgres:
  #solr:
  #elasticsearch:
  redis:
  #phpmyadmin: